교착상태 Deadlock 

발생 조건

1. 상호배제 Mutual Exclusion
	한 자원에 대한 여러 프로세스의 동시 접근 불가

2. 점유와 대기 Hold and Wait
	자원을 가지고 있는 상태에서 다른 프로세스가 사용하고 있는 자원의 반납을 기다리는 것

3. 비선점 Non Preemptive
	다른 프로세스의 자원을 강제로 가져올 수 없음

4. 환형대기 Circle wait
	각 프로세스가 순환적으로 다음 프로세스가 요구하는 자원을 가지고 있는 것

해결 방법

1. 예방 Prevention
	네 가지 조건 중 하나만 해결하면 된다.
		점유와 대기 조건 방지
			자원의 낭비
			무한 지연
		비선점 조건 방지
			선점 시, 그 전까지 작업 중이던 내용 포기
			무한 지연
		환형 대기 조건 방지
			사용자가 자원들을 고유 번호 순으로 요구하도록 프로그램 재작성

2. 회피 Avoidance
	교착상태의 발생조건을 없애기보다는 발생하지 않도록 적용
	자원할당 그래프 알고리즘, 은행원 알고리즘

3. 회복 Recovery
	교착상태 발생하면 발생 이후에 문제 해결

4. 무시 Ignore
	교착상태를 해결할 때에도 컨텐스트스위칭에 의한 오버헤드로 성능 저하가 생긴다.
	교착상태에 의한 성능 저하보다 이를 해결할 때의 성능저하가 큰 경우 그냥 무시한다.

