원칙
	객체지향 원칙과 같다.

패턴 유형
	생성 / 구조 / 행위
생성
	팩어빌프싱
	대표 - 팩토리
구조
	어브컴데퍼프플
	대표 - 어댑터(메소드)
행위
	인커미메스비체
	대표 - 템플릿


명령
	행위 패턴

범위 - 표 참고
	클래스 (컴파일 타임)
	객체 (런 타임)

경량 FlyWeight
	구조 패턴

관찰자 Observer
	행위 패턴

프로토타입 
	생성 패턴

싱글턴
	생성 패턴
	
상태
	구조 패턴

순서 패턴 (게임 로직)
최적화 패턴


커플링의 정의는 다양하다.
	한 클래스를 제거하면, 다른 클래스에서 문제가 생길 때 커플링되어 있다고 한다.
	신경 써야 하는 것을 줄이는 것


Study - 디자인패턴 폴더 참고




명령 패턴

정의
	명령 자체를 객체화한다.
	파생 클래스에서 명령을 재정의
	
람다의 일급객체?
	함수든 뭐든 변수화한다.
	클로저 자체가 일급 객체. 하나의 데이터 취급됨

Ctrl Z Undo / Ctrl Y Redo
	스택 2개로 구현

함수형 언어
	함수 하나하나가 스레드
람다
	디버깅이 어렵다.
	멀티 스레드 환경에서 어려움
	클릭했다, 이동했다 등 명확한 상황에서만 사용


경량 패턴
	메모리는 공유
	위치 매개변수만 다르게

	
프로토타입
	객체 만들고 -> 복사해서 값 다르게 사용
	메모리를 공유하지 않음
	템플릿 사용

	리플렉션 지원하지 않는 언어
		Spawner -> clone() 함수
	리플렉션 지원 언어
		?


옵저버
	하나의 관찰자, 전체를 관찰
		ex. 플레이어와 몬스터가 특정 지역 가면 안 될 때 등
	관찰받을 애들을 등록


싱글턴
	생성시점을 결정하기 어렵다. 
		Get 최초 호출 시점
	전역 변수 -> 코드 이해 어려움, 커플링 조장
	동시성 문제 -> 멀티 스레딩

	딱 하나만 있을 경우만 사용
		사운드매니저 등


상태
	유한상태기계, 푸시다운 오토마타

언리얼 비헤이비어 트리
	계층형 상태 기계



이중 버퍼

백 버퍼

목적
	페어링(깜빡임) 방지
		렌더링하고, 지우고를 반복하는 과정에서 발생하는 문제

컬링
	RS
	3D 공간에서 불필요한 삼각형을 잘라낸다.
	
RTV / DSV
	PS
	
더블 버퍼링
	포워드 버퍼에서 지워질 때 백 버퍼를 보여줌. 이 과정 반복

구조
	그래픽 카드
	|------------------> 로우 레벨 레이어
	DXGI (추상계층) 
	|
	스왑체인
	|	|
	DC	DC
	백버퍼	백버퍼

스왑체인
	여러 디바이스들의 렌더링 관리



게임 루프
	업데이트 & 렌더
	언리얼: 입력 스레드, 틱 스레드, 렌더링 스레드 등 스레드 분리됨
		스레드 문서 참고


업데이트 메서드
	읽어만 보기






