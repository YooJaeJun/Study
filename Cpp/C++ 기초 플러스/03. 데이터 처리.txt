변수 이름 규칙
- 두 개의 밑줄 문자로 시작하는 이름이나, 밑줄 문자와 대문자로 시작하는 이름은, 그것을 사용하는 컴파일러와 리소스가 사용하기로 예약됨
- 하나의 밑줄 문자로 시작하는 이름은, 그것을 사용하는 컴파일러와 리소스가 전역 식별자로 사용하기로 예약됨
- 전역 식별자 global identifier

C++ 바이트
- 컴파일러의 기본 문자 세트를 수용할 수 있는 최소한의 연속된 비트들로 구성됨

<climits>
- 정수형들의 범위 정보, 한계값

'''cpp
#include <iostream>
#include <climits>
using namespace std;

int main()
{
	cout << INT_MAX << ' ' <<
		SHRT_MAX << ' ' <<
		LONG_MAX << ' ' <<
		LLONG_MAX << ' ' <<
		endl;

	cout << sizeof(int) << ' ' <<
		sizeof(short) << ' ' <<
		sizeof(long) << ' ' <<
		sizeof(long long) << ' ' <<
		endl;
}
```

#define 지시자
- 에디터나 워드 프로세서에서 전체 파일을 대상으로 문자열 찾아 바꾸기 기능처럼 동작한다.

전처리
- 독립 토큰(분리된 단어)에만 적용되고 파묻힌 단어들은 건너띈다.

C++ 초기화 문법
- int num(432);
- int num{ 432 };   // [C++11]
- int num = { };    // 0으로 초기화

미확정 undefined 상태
- 변수가 생성되기 바로 직전에 그 메모리 위치에 우연히 남아있던 것이 그 변수의 값으로 행세해버린다.

오버플로, 언더플로
- C++ 표현 한계값을 벗어남
- unsigned(부호 없는) 정수형에서 조심

진수
'''cpp
#include <iostream>
#include <climits>
using namespace std;

int main()
{
	int d10 = 42;
	int d16 = 0x42;
	int d8 = 042;
	cout << d10 << ' ' << d16 << ' ' << d8;		// 42 66 34
}
'''

```cpp
#include <iostream>
#include <climits>
using namespace std;

int main()
{
	int d10 = 42;
	int d16 = 42;
	int d8 = 42;
	
	cout << d10 << endl;
	cout << hex;	// 진법을 바꾸는 조정자
	cout << d16 << endl;
	cout << oct;	// 진법을 바꾸는 조정자
	cout << d8 << endl;
	
	// 42 2a 52
}
```

char
```cpp
char ch = 77;
cout << ch;     // M
```

cout.put()
- 문자를 화면에 출력
```cpp
char ch = 'M';
cout.put(ch);
cout.put('!');
```
- cout의 멤버함수 put()

'.'
- 멤버 연산자 Membership operator

escape sequence
- 생략
- cout << x << endl;    // cout << x << '\n'; 보다 쉬움
- cout << "dr.x. \n:    // cout << "dr.x. " << endl;    보다 쉬움

백스페이스 이스케이프 시퀀스
- \x8, \010, \b
- 기호 이스케이프 시퀀스를 사용하기
- 기호 이스케이프 시퀀스는 모든 코드 체계에서 잘 동작 + 알아보기도 쉬움
```cpp
#include <iostream>
using namespace std;

int main()
{
	cout << "번호입력:_____\b\b\b\b\b";
	long code;
	cin >> code;
	cout << code;

	return 0;
}
```

유니버설 네임 코드
- \u00E2 == '?' 등등
- 유니코드는 수많은 문자와 기호의 표준 코드를 데이터형별로 묶어 제공함으로써
- 다양한 문자 세트를 표시할 수 있도록 해줌
- character에 code point라고 불리는 번호를 대입

wchar_t
- 확장 문자 세트 wide character type
- 한국어, 일본어 등 1바이트로 표현할 수 없는 문자 표현
- cin, cout 은 wchar_t 형을 처리하지 못함
- wcin, wcout 객체 사용
- 문자 앞 'L'
- ex) wchar_t bob = L'P';

[C++11]
char16_t
- u'C' / u"be good"

char32_t
- U'R' / U"dirty"


const 제한자

키워드 const
- 제한자(qualifier)
- 선언의 의미를 제한함


