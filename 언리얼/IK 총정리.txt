Root
-Pelvis		T(Transform)
--Hips		LT(Local ~) * PT(Parent ~)
---Clavicle	LT * PT


Root - 액터와 호환작용 하기 위한 가상
Pelvis - 실제 존재하는 Root Bone


애니메이션 행렬까지 곱
	Clavicle은 Hips의 결과까지 곱한 결과가 나옴

Bone은 누적된 값이 곱해지기 때문에 애니메이션의 수정 불가
	Bone 위치 임의 변경 위해 Poseable Component 사용해야 함

Forward Kinematics (FK, 정운동화)는 로컬/메시 공간에서 일어난다.



Two Bone IK 솔버 (IK + FK)

Inverse Kinematics
	역순으로 Bone 계산

Two Bone IK 솔버
	특정 부분까지만 IK로 계산, 나머지 부분 FK로 계산

※ 언리얼 5의 Bull IK 솔버
	내리막길 내려갈 때 허리까지 회전할 수 있는 기능 구현 가능


애니메이션 공간
	Local / Mesh / Component

Local
	애니메이션 수정 불가능

Mesh
	애니메이션 수정 가능, but 제한
	에디터 설정으로만 수정 가능
	ABP에서 Mesh Space Rotation Blend 옵션 체크

Component
	프로그래밍으로 애니메이션 수정 가능
	실제 컴포넌트 안에 ABP가 붙어있기 때문에, Component 공간이라 표현
	Ex) Poseable Component




Offset Distance
	임의의 값으로 애니메이션이 캐릭터와 살짝 떠 있는 크기만큼 고정값을 준 것


컴포넌트 공간에서 IK 적용이 다 끝나면,
	최종 애니메이션은 다시 로컬공간으로 변경한 본을 전달해준다.
	로컬을 컴포넌트로 바꾸는 과정은 Bone을 복사하기 때문에, 여러 번 호출해도 무관
	But, "컴포넌트를 로컬"로 바꾸는 과정은 Bone을 실제 Bone에 모두 적용하고 변경하기 때문에 최소한 호출


2 Bone IK

Effector
	실제로 움직일 본 값
	Ex) 발 IK - Foot_L, R
Joint
	기준이 될 본
	Effector와 Joint 본 사이는 IK 연산을,
	나머지는 FK 연산 수행

Effector, Joint 설정 본들은 가상 본으로 설정


설정들
Effector
Traslation Mode	==	"본 트랜스폰(변경)"
	Ignore
		트랜스폰, 회전 변경하지 않음
	Replace Existing
		설정한 트랜스폼과 회전값으로 변경
	Add to Existing
		트랜스폼과 회전값에 변경할 트랜스폼, 회전값을 더하면서 서서히 바뀌도록 변형

Translation Space	==	"본 트랜스폰(변경)"
	World Space
	Component Space
		Mesh를 출력해주는 공간
	Parent Bone Space
		컴포넌트 안에 존재하는 Bone의 부모 공간
	Bone Space
		컴포넌트 안에 존재하는 Bone들의 공간


Joint
	무릎 가상 본


Bone에 IK 연산	==	"2본 IK"
	실제로 움직일 본인 Foot_L을 IK_Bone으로 지정
	Allow Stretching 옵션 체크
	앞서 계산한 Effector Target, Joint Target 넣기


오른발 주의사항
	오른발과 왼발의 트랜스폼은 반전됨, 즉 마이너스 곱한 값


허리(Pelvis) 설정
	IK로 어딘가 붙이거나 하지 않기 때문에 "본 트랜스폼(변경)"만 사용



코드에서...
Trace 후
	허리는 왼발과 오른발 중 더 낮은 Bone의 거리로 적용
	Pelvis가 Left, Right보다 먼저 Set 되어야 함
	허리가 숙여지는 만큼, 왼발과 오른발도 더 내려가야 함	
		왼발 거리 - 허리 거리
		(오른발 거리 - 허리 거리) * -1


Atan2
	Y Z 를 받음	Roll 회전
	X Z 를 받고 *-1	Pitch 회전
		지면이 올라갈수록 발등이 몸쪽으로 회전해야 됨.
		발이 올라가면서 반시계방향 회전해야 하기 때문에 -1를 곱해줌
